name = "ip_baseline_highspy"
type = "ip_baseline"
author = "thell"
description = "configuration for the node weighted integer flow variant"

# This variant uses cumulative reverse flow (terminal to root).

# When used without any reductions this is the reference implementation
# and should provide exact results for comparison to other setups.

# Usage with subgraph validates the subgraph grows in such a way that the
# optimal solution still exists.

# NOTE: It can not be used with any reductions that shift node weights to edges!

# NOTE: It can not be used with pd approximation without modifications to the
# optimizization functions, so use a different setup for that.

[actions]
baseline_tests = false
scaling_tests = true


[logger]
# Basic output no timestamp, no filename
level = "SUCCESS"
format = "<level>{message}</level>"

[exploration_data]
directed = true
edge_weighted = false
omit_great_ocean = true

[solver]
log_to_console = false
mip_feasibility_tolerance = 1e-4
mip_improvement_timeout = inf
mip_rel_gap = 1e-4
primal_feasibility_tolerance = 1e-4
time_limit = inf
threads = 8


[subgraph]
generate_subgraph = true
greedy_components = true
sparsify_leafs = true
sparsify_zero_cost_nodes = true
include_shortest_paths = false
include_shortest_paths_all_terminals = true

[approximation]
approximate_solution = false
method = ["PD"]
post_process_bridges = true
augment_paths = true

[reduction]
reduce_subgraph = false
# non-terminal degree reductions
ntd1 = true
ntd2 = true
ntd3 = false
# fixed-terminal degree reductions
ftd1 = false
# contract neighboring fixed terminals
ftn = false
# steiner reductions
sd = false # distance
sb = false # bottleneck

[solution]
cleanup = true
validate = true
save = false
visualize = false
# visual_compare_to = "ip_baseline" # for visualization
